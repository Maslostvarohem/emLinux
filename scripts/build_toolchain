#!/bin/bash
#################################################################################
# Author: Martin Olejar
#################################################################################

if [ -z "$(which readlink)" ]; then
  echo "install readlink package"
  exit 1
fi

# load functions
SCRIPTS_DIR=$(dirname $(readlink -e $0))
. $SCRIPTS_DIR/functions

CORES=$(grep -c ^processor /proc/cpuinfo)
#CORES=$(getconf _NPROCESSORS_ONLN)

usage() {
cat << EOF
Usage: $0 [options]

Toolchain build script for i.MX (NXP MPU)

OPTIONS:
   -h/--help   Show this message
   -x          Use XDialog
   -v          Verbose

EOF
}

# Get the params from arguments provided
argparse "?|h|help x|xdialog v|verbose" $*
if [ $? -eq 0 ]; then
  echo
  echo "Use: $0 -h/--help for usage description"
  exit 1
fi

# process help argument and exit
[[ "$param_help" = "true" ]] && {
    usage
    exit 0
}

echo
echo '***********************************************************'
echo '*                   Prepare Toolchain                     *'
echo '***********************************************************'
echo
echo " For printing all usable options use \"build_toolchain -h\""
echo

# Check if instaled required packages and install if doesn't
check_package "xz-utils"
check_package "gzip"
check_package "git"

if [ "$param_xdialog" = "true" ]; then
    check_package "zenity"
    MENUCONFIG="xconfig"
else
    MENUCONFIG="menuconfig"
fi

CWD=$(pwd)
LINAROBIN_URL="https://releases.linaro.org/components/toolchain/binaries"
CROOSTOOL_URL='https://github.com/crosstool-ng/crosstool-ng'

install_linaro_toolchain() {
  local TOOLCHAIN_TYPE=$1
  local TOOLCHAIN_VERS=($(curl -s ${LINAROBIN_URL}/ | grep "components/toolchain/binaries/[0-9*]" | awk -v FS="components/toolchain/binaries/|/" '{print $3}'))
  
  list_dialog 'Select Toolchain Version' "${TOOLCHAIN_VERS[@]}"
  local TOOLCHAIN_VER=$RET_VALUE

  local TOOLCHAIN_PKG="gcc-linaro-*-x86_64_${TOOLCHAIN_TYPE}.tar.xz"
  local TOOLCHAIN_URL="${LINAROBIN_URL}/${TOOLCHAIN_VER}/${TOOLCHAIN_TYPE}/${TOOLCHAIN_PKG}"

  list_dialog 'Select install dir' "/opt $HOME/x-tools $CWD"
  local INSTALL_DIR=$RET_VALUE

  local TEMP_DIR=$(mktemp -d)
  download "${TOOLCHAIN_URL}" "$TEMP_DIR/$TOOLCHAIN_PKG"
  mkdir "$TEMP_DIR/unpacked"
  extract "$TEMP_DIR/$TOOLCHAIN_PKG" "$TEMP_DIR/unpacked"
  local TOOLCHAIN_DIR=$(ls $TEMP_DIR/unpacked)
  if [ "$INSTALL_DIR" = '/opt' ]; then
    sudo mv "$TEMP_DIR/unpacked/$TOOLCHAIN_DIR" "$INSTALL_DIR"
  else
    [[ -d $INSTALL_DIR ]] || mkdir -p $INSTALL_DIR
    mv "$TEMP_DIR/unpacked/$TOOLCHAIN_DIR" "$INSTALL_DIR"
  fi
  rm -rfd "$TEMP_DIR"
 
  COMPILER="$INSTALL_DIR/$TOOLCHAIN_DIR/bin/${TOOLCHAIN_TYPE}-gcc"
}
  
install_crosstool_ng() {
  if [ -d 'crosstool/.git' ]; then
    cd crosstool
    git pull || {
      eprint ' Crosstool-NG Pull Error'
      exit 1
    }
  else
    git clone $CROOSTOOL_URL crosstool || {
      eprint ' Crosstool-NG Clone Error'
      exit 1
    }
    cd crosstool
  fi

  ./bootstrap && ./configure --enable-local && make -j${CORES} || {
    eprint ' Crosstool-NG Initialization Error'
    cd $CWD
    exit 1
  }

  local CONF_TARGET=($(ls samples | grep 'arm-unknown'))
  list_dialog 'Select Configuration' "${CONF_TARGET[@]}"
  CONF_TARGET=$RET_VALUE

  ./ct-ng $CONF_TARGET || {
    eprint ' Crosstool-NG Config Error'
    cd $CWD
    exit 1
  }

  msg_dialog 'question' "Run Menuconfig"
  [[ "$RET_VALUE" = "YES"  ]] && ./ct-ng menuconfig

  list_dialog 'Select install dir' "/opt $HOME/x-tools $CWD"
  local INSTALL_DIR=${RET_VALUE}
  local TEMP_DIR=$(pwd)/out

  # update install dir
  sed -i 's,CT_PREFIX_DIR=.*,CT_PREFIX_DIR='"${TEMP_DIR}"'/${CT_TARGET},' .config

  ./ct-ng build || {
    eprint ' Crosstool-NG Build Error'
    cd $CWD
    exit 1
  }

  cd $CWD

  local TOOLCHAIN_DIR=$(ls ${TEMP_DIR})
  sudo mv "$TEMP_DIR/$TOOLCHAIN_DIR" "$INSTALL_DIR"

  msg_dialog 'question' "Delete Crosstool-NG SRC"
  [[ "$RET_VALUE" = "YES"  ]] && rm -rfd crosstool

  COMPILER="$INSTALL_DIR/$TOOLCHAIN_DIR/bin/${TOOLCHAIN_DIR}-gcc"
}


list_dialog 'Select Toolchain Compilation' "debian linaro crosstool-ng"
case $RET_VALUE in
  debian) 
    list_dialog 'Select Toolchain Type' "gcc-arm-none-eabi gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf"
    sudo apt-get install $RET_VALUE || {
      eprint ' $RET_VALUE install Error'
      exit 1
    }
    COMPILER="/usr/bin/${RET_VALUE:4}-gcc"
    ;;

  linaro)
    list_dialog 'Select Toolchain Type' "gcc-arm-eabi gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf"
    install_linaro_toolchain "${RET_VALUE:4}" 
    ;;

  crosstool-ng)
    echo "Install Dependencies"
    check_package 'gcc'
    check_package 'gperf'
    check_package 'bison'
    check_package 'flex'
    check_package 'texinfo'
    check_package 'help2man'
    check_package 'make'
    check_package 'libncurses5-dev'
    check_package 'python-dev'
    install_crosstool_ng
    ;;

  *) eprint "Unsupported Toolchain: $RET_VALUE"; exit 1 ;;
esac

echo
echo " ---------------------------------------------------------------"
echo "       Congratulation, Toolchain install was successful"
echo " ---------------------------------------------------------------"
echo " Path: ${COMPILER%/*}"
echo " Exec: ${COMPILER##*/}"
echo " Version: $(${COMPILER} -dumpversion)"
echo " ---------------------------------------------------------------"
echo
